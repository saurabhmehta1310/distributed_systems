# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import bruh_pb2 as bruh__pb2


class NodeStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.request_vote = channel.unary_unary(
                '/Node/request_vote',
                request_serializer=bruh__pb2.req_vote.SerializeToString,
                response_deserializer=bruh__pb2.req_vote_res.FromString,
                )
        self.append_entry = channel.unary_unary(
                '/Node/append_entry',
                request_serializer=bruh__pb2.app_entry.SerializeToString,
                response_deserializer=bruh__pb2.app_entry_res.FromString,
                )
        self.findLead = channel.unary_unary(
                '/Node/findLead',
                request_serializer=bruh__pb2.client_findLead.SerializeToString,
                response_deserializer=bruh__pb2.res_findLead.FromString,
                )
        self.sett = channel.unary_unary(
                '/Node/sett',
                request_serializer=bruh__pb2.client_set.SerializeToString,
                response_deserializer=bruh__pb2.res_set.FromString,
                )
        self.get = channel.unary_unary(
                '/Node/get',
                request_serializer=bruh__pb2.client_get.SerializeToString,
                response_deserializer=bruh__pb2.res_get.FromString,
                )


class NodeServicer(object):
    """Missing associated documentation comment in .proto file."""

    def request_vote(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def append_entry(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def findLead(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def sett(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_NodeServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'request_vote': grpc.unary_unary_rpc_method_handler(
                    servicer.request_vote,
                    request_deserializer=bruh__pb2.req_vote.FromString,
                    response_serializer=bruh__pb2.req_vote_res.SerializeToString,
            ),
            'append_entry': grpc.unary_unary_rpc_method_handler(
                    servicer.append_entry,
                    request_deserializer=bruh__pb2.app_entry.FromString,
                    response_serializer=bruh__pb2.app_entry_res.SerializeToString,
            ),
            'findLead': grpc.unary_unary_rpc_method_handler(
                    servicer.findLead,
                    request_deserializer=bruh__pb2.client_findLead.FromString,
                    response_serializer=bruh__pb2.res_findLead.SerializeToString,
            ),
            'sett': grpc.unary_unary_rpc_method_handler(
                    servicer.sett,
                    request_deserializer=bruh__pb2.client_set.FromString,
                    response_serializer=bruh__pb2.res_set.SerializeToString,
            ),
            'get': grpc.unary_unary_rpc_method_handler(
                    servicer.get,
                    request_deserializer=bruh__pb2.client_get.FromString,
                    response_serializer=bruh__pb2.res_get.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Node', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Node(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def request_vote(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Node/request_vote',
            bruh__pb2.req_vote.SerializeToString,
            bruh__pb2.req_vote_res.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def append_entry(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Node/append_entry',
            bruh__pb2.app_entry.SerializeToString,
            bruh__pb2.app_entry_res.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def findLead(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Node/findLead',
            bruh__pb2.client_findLead.SerializeToString,
            bruh__pb2.res_findLead.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def sett(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Node/sett',
            bruh__pb2.client_set.SerializeToString,
            bruh__pb2.res_set.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Node/get',
            bruh__pb2.client_get.SerializeToString,
            bruh__pb2.res_get.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
